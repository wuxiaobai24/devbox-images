name: Test DevBox Configuration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-dockerfile:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validate Dockerfile syntax
      run: |
        # Ê£ÄÊü• Dockerfile ÊòØÂê¶Â≠òÂú®
        if [ ! -f "Dockerfile" ]; then
          echo "‚ùå Dockerfile not found"
          exit 1
        fi

        # Âü∫Á°ÄËØ≠Ê≥ïÊ£ÄÊü•
        echo "üîç Checking Dockerfile syntax..."

        # Ê£ÄÊü•ÂøÖË¶ÅÊåá‰ª§
        required_directives=("FROM" "RUN" "EXPOSE" "CMD")
        for directive in "${required_directives[@]}"; do
          if ! grep -q "^$directive" Dockerfile; then
            echo "‚ùå Missing required directive: $directive"
            exit 1
          fi
        done

        echo "‚úÖ Dockerfile syntax validation passed"

    - name: Validate compose configuration
      run: |
        # Ê£ÄÊü• docker-compose.yml
        if [ ! -f "docker-compose.yml" ]; then
          echo "‚ùå docker-compose.yml not found"
          exit 1
        fi

        # Ê£ÄÊü• YAML ËØ≠Ê≥ï
        if command -v python3 &> /dev/null; then
          python3 -c "import yaml; yaml.safe_load(open('docker-compose.yml'))"
          echo "‚úÖ docker-compose.yml syntax validation passed"
        else
          echo "‚ö†Ô∏è  YAML validation skipped (python3 not available)"
        fi

    - name: Check script permissions
      run: |
        # Ê£ÄÊü•ËÑöÊú¨Êñá‰ª∂ÊùÉÈôê
        scripts=("start.sh" "stop.sh" "connect.sh" "quick-check.sh" "install-ai-tools.sh" "install-enhanced-tools.sh" "test-enhanced-tools.sh")
        for script in "${scripts[@]}"; do
          if [ -f "$script" ] && [ ! -x "$script" ]; then
            echo "‚ùå Script $script is not executable"
            exit 1
          fi
        done
        echo "‚úÖ All script permissions are correct"

  lint-code:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Lint shell scripts
      run: |
        # Ê£ÄÊü• shell ËÑöÊú¨ËØ≠Ê≥ï
        find . -name "*.sh" -exec shellcheck {} + || echo "shellcheck not available, skipping"

    - name: Check documentation links
      run: |
        # Ê£ÄÊü•ÊñáÊ°£‰∏≠ÁöÑÈìæÊé•
        if command -v markdown-link-check &> /dev/null; then
          find . -name "*.md" -exec markdown-link-check {} + || echo "markdown-link-check not available, skipping"
        else
          echo "‚ö†Ô∏è  Link validation skipped (markdown-link-check not available)"
        fi

  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ubuntu:24.04'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'